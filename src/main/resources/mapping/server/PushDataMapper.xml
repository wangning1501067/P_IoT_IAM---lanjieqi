<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.beyondsoft.rdc.cloud.iot.iam.server.push.mapper.PushDataMapper" >
  <resultMap id="BaseResultMap" type="com.beyondsoft.rdc.cloud.iot.iam.server.push.model.PushDataVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="merchant_id" property="merchantId" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="push_date" property="pushDate" jdbcType="DATE" />
    <result column="images_id" property="imagesId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, merchant_id, device_id, create_time, update_time, push_date, images_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from iam.iam_push_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from iam.iam_push_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.beyondsoft.rdc.cloud.iot.iam.server.push.model.PushDataDo" >
    insert into iam.iam_push_data (user_id, merchant_id,
      device_id,
      push_date, images_id)
    values (#{userId,jdbcType=INTEGER}, #{merchantId,jdbcType=VARCHAR},
      #{deviceId,jdbcType=INTEGER},
      #{pushDate,jdbcType=DATE}, #{imagesId,jdbcType=INTEGER})
  </insert>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into iam.iam_push_data (user_id, merchant_id,
    device_id,
    push_date, images_id)
    values
    <foreach collection="pushDataBoList" item="pushDataBo" index="index" separator=",">
      (
      #{pushDataBo.userId,jdbcType=INTEGER},
       #{pushDataBo.merchantId,jdbcType=VARCHAR},
      #{pushDataBo.deviceId,jdbcType=INTEGER},
      #{pushDataBo.pushDate,jdbcType=DATE},
       #{pushDataBo.imagesId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="com.beyondsoft.rdc.cloud.iot.iam.server.push.model.PushDataDo" >
    insert into iam.iam_push_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="pushDate != null" >
        push_date,
      </if>
      <if test="imagesId != null" >
        images_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null" >
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="pushDate != null" >
        #{pushDate,jdbcType=DATE},
      </if>
      <if test="imagesId != null" >
        #{imagesId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.beyondsoft.rdc.cloud.iot.iam.server.push.model.PushDataDo" >
    update iam.iam_push_data
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
        update_time = now(),
      <if test="pushDate != null" >
        push_date = #{pushDate,jdbcType=DATE},
      </if>
      <if test="imagesId != null" >
        images_id = #{imagesId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.beyondsoft.rdc.cloud.iot.iam.server.push.model.PushDataDo" >
    update iam.iam_push_data
    set user_id = #{userId,jdbcType=INTEGER},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      device_id = #{deviceId,jdbcType=INTEGER},
      update_time = now(),
      push_date = #{pushDate,jdbcType=DATE},
      images_id = #{imagesId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据时间查询推送记录-->
  <select id="getPushDataByData" resultType="java.util.Map">
    select
    count(1)
    from iam.iam_push_data
    where push_date = #{pushDate,jdbcType=DATE}
    and merchant_id = #{marchentId}
  </select>

  <!--推送广告趋势图-->
  <select id="getPushChaert" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from iam.iam_push_data
    where push_date between #{startDate} and #{endDate}
    and merchant_id = #{merchantId}
    <if test="deviceId != null" >
        and device_id = #{deviceId}
    </if>
  </select>

  <!--推送广告总排行TOP5-->
  <select id="getAdvertList" resultType="java.util.Map">
    SELECT ROW_NUMBER
        () OVER ( ORDER BY num DESC ) AS ids,
        num,
        images_id,
        images_name
    FROM
        (
    SELECT COUNT
        ( ipd.images_id ) AS num,
        ipd.images_id,
        ii.images_name
    FROM
        iam.iam_push_data ipd
        LEFT JOIN iam.iam_images ii ON ii.ID = ipd.images_id
    WHERE
        ipd.push_date BETWEEN #{startDate}
        AND #{endDate}
        AND ipd.merchant_id = #{merchantId}
    GROUP BY
        ipd.images_id,
        ii.images_name
    ORDER BY
        num DESC
        ) T
  </select>

  <!--推送广告设备总排行TOP5-->
  <select id="getDeviceList" resultType="java.util.Map">
    SELECT ROW_NUMBER
        () OVER ( ORDER BY num DESC ) AS ids,
        num,
        device_id,
        device_name
    FROM
        (
    SELECT COUNT
        ( ipd.device_id ) AS num,
        ipd.device_id,
        ID.device_name
    FROM
        iam.iam_push_data ipd
        LEFT JOIN iam.iam_device ID ON ID.ID = ipd.device_id
    WHERE
        ipd.push_date BETWEEN #{startDate}
        AND #{endDate}
        AND ipd.merchant_id = #{merchantId}
    GROUP BY
        ipd.device_id,
        ID.device_name
    ORDER BY
        num DESC
        ) T
  </select>

    <!--批量删除-->
    <delete id="batchDeleteByDeviceId">
        delete from iam.iam_push_data
        where device_id in
        <foreach collection="deviceIdList" item="deviceId" open="(" separator="," close=")">
            #{deviceId}
        </foreach>
    </delete>
</mapper>